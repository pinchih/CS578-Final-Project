<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>com.evernote</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>ui.HomeActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.PhoneMainActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabletFragmentActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.EvernoteMapActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.SnippetActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.MapActivityGroup</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.PinDropActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.PinLockActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SecurityPreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SECURITY_PREFERENCES</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabManager</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.OfflineNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.InformationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EvernotePreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetNewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.widget.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.widget.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SKITCH_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LearnMoreActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EmailActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagEditActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteInfoActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.FilePickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AuthenticationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WebActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TrunkActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchSelector</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LoginActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RegistrationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.CaptchaActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ResetPasswordActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RateAppActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.DYNDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.StandardDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareWithFacebook</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SDCardChangedActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.helper.URIBrokerActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.BillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.LaunchBillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookShareSettingsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.EmailPickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.EvernoteService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.ui.helper.WidgetProviderService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.SyncService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.billing.BillingService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetWSnippetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.WidgetUpdateReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.BootReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.BOOT_COMPLETED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.SyncNotification</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SYNC_STARTED</actions>
                    <actions>com.evernote.action.SYNC_ERROR</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.SDCARD_CHANGED</actions>
                    <actions>com.evernote.action.DB_READ_ONLY</actions>
                    <actions>com.evernote.action.DB_OPEN_CREATION_FAILED</actions>
                    <actions>com.evernote.action.DB_CORRUPTED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.sonyericsson.extras.livekey</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.StopAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.ACTION_STOP_AUDIO_NOTE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.billing.BillingReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.android.vending.billing.IN_APP_NOTIFY</actions>
                    <actions>com.android.vending.billing.RESPONSE_CODE</actions>
                    <actions>com.android.vending.billing.PURCHASE_STATE_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.util.MultiUseReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_DELAYED_NOTIFICATION</actions>
                    <data>
                        <scheme>notificationId</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>provider</type>
            <name>com.evernote.provider.EvernoteProvider</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.SDCARD_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>omn4s9f7t119rupa2ufnlkqo58</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lssff4sgupim0l7qv8ru31ljd0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gld45mddvh90kmi8th3sp1f9pq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l7ug6dmtjindoectvre4q9ctmp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.SDCARD_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>va6gcmum3gg8abujv4h6tolq7o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fdkjaam5v887sal59kgs2qb4sc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ajv71ecfrbka7l4de0cicccltt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>frb620bg7us538rpguo1680g5i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r7cuv4io9lkrf2pfe75h6t96b0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s54mu6nombgmgi0nh7pfp6vnl2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m5uqg9bgonl7t9695eph4if1sf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g204ne83t3eqlsslhhr4ko7ik2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o7ubnavh754nkth6dtkpeufq3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ct43peuk29v3ogfa7unfggeh5c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i4feadqbc4gsdvgshdqfehi967</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ldud11mlg2emgai4noj5dhiobd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4519aunvlepucqn4toiolq9as7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s48r6e607dghjeq62dcbnnli2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.PURCHASE_STATE_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p12houj6alm6vtegqhg95dn8m2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e40o3rnoimshnd4n7vh004uius</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.RESPONSE_CODE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mkd3jjr6aq3hslc7obmldl8tiq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rl056m6tbtp7tlerjje0d9ueve</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>tg5ne2htr2h9132lfrkojk3b5b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gb6dtusis02dffdrc9qs1h28qb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pc2qmenu8vmrk1tgabg6bn254</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dmf8b6dl65v3pj4dbd1l2tfapk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qc4pp88srjkcbucq9tk60vro6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>13rcf43r0j7aj2ph1nqli1s3ud</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i8algjih00uvvqdg97pst1f8j4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4v2519fal756v7vui82ghbantd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3902k2ej4i9910mkkgqr35kag7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h0c5r32ghj6vlle3n0d9h5sgs2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l468apne5nuosb0kip4kgmb18u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_RECENT_NOTES_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7cuc4vmgq1p33s9qc65mnrqnr2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3m4e8ktkkfukfbfg04su7djke4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>317ui30js2e7ajtgs61e203dbb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vvhl6588u9k3kdkhm651vb68hf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_RECENT_NOTES_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b82b10s8sn9k2ebppq081qcvkt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.evernote.billing.GET_PURCHASE_INFORMATION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mu62ffgnoaf7a8uibfg7qjka0u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c1o9998su4b5hpsj2oa8nrf92n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>l3o1rmuqmg1tpq70msl3a552qe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u0m9n0vs97923mbimc4548fb0a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nm6qcng3p2u2gtkd9qk90i3v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k7h9ebtavihm1a2c5fpuqutcpu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cblg5t0av28fv87c9neu1qpbhl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gpc5g83t5muhrlgcin7avc1h18</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cd84fblposb4etaaiguqhgbk6j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>14plfsj6m4c8p1bdbsr942ie6j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ngpvr21popki33u5vml9c5r533</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>q4e7l2b1n5ra4s7aejlnkb9dsm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d34ndptoiirv41kj22g3unlbts</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>trpnf8h1vtgm8e979fsdtobcab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>olrhcmjmpajd4oj0f0nindpce0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.MOVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ekp0j8ubtsvkqgih9tef5446u2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kr9h3e6qc7etoq65gng02l5vss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2ntvfqrk8a91hcp594d809u83s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8qia93nluou5vavj6j2cg3ji9p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d045er6k6poahst61en12gcbop</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h6hc02cvperu6f6prjqdgua7km</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>8kqpkq19ku7156s8ai8k5t7b40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5pniv4ngut2s2ga38ji4ptd2tn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5op3gfge9aq6bdi3diho3ouhja</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qfkhok2vpa2b8m8eeq8jsu4lnv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1e30qfm628b61b8bajm56up76p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>1se3a987j7a1lm431r2nid42ql</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5n7eho75p8vaq899pl71gqjkdf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rjl02vkjn97g0hhqv6c00i8r45</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lg0lervkf7s6v4f6b5r36bbg5s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vedl8tvtaim76vbe0l9ssdcrum</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>t5and97lcg39bmpp4uu1fdg4h3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>10luo2aui06888l14n4ekjrtu9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dsl2tpp2botc9o98ttnrklnmto</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ia8vt2dveqi86q70g44u6b30i7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>i7aa0b9omomrs9kf05g2i7bp67</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tdd3nohnkv50ln8jbr31vu3pc2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2ng8h1n5c0c2eua38mhr2p4t0u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jqpsb1fkphj82v84l2irvm4u7v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8jdmef1cm5l1r1jaukhhsprikh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ohf1dse79poj72o6rrv5i2h05p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v8m1euskb4rl1448i3g5303un4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>svgeva9ga02fbk96phrbl2n3l3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_READ_ONLY&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dm1oudeit53303rc1pourd61ah</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_TODO&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pf8cerbm5den5r1caimdld7ecv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>&quot;android.intent.action.VIEW&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pn5bf6ccia44ielonlkb8fm017</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6m5c22lgd3oju9hlj2ent402d1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>r5i68es5kge50e88o2aihkgg55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ilfc5n4p4p6k775bgs40csq8ad</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.STOP_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>saj4qqb1r1ttpa6tc83nv3uf07</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>181muorrc7bta6mtlkcmehvtuh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jmmtm9ijjusld5oeueke3bvcmm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ipekqgp4evb05csqgi07uukd1o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ens0ea0i1lbcu1p5kt0256eh4e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7hqkh7l9a0vjptmd4mrfbrsa3a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cf1gcp5ch63nquf1usl9nhrde</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ll0t3h0kq43ro70ibca39ioefg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>m8flmj8b5eik8g107a1e4l0utu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vup3f42ng0is3mvdkbgnl9234n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.UPDATE_NOTE_TAGS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f46j71cdkcnkm150dfjvubq8qs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r67snp1akpspdukurq1r0k9001</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4joifu4krdp418kli5io6lg63g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3n2tt2ld3dpesbikjo6lvpom1r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dn09vh406usnr2h381asbj6qjh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lcqbhntes9rj5ghfii2s6hhe93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fg48te70l4mlbok9tja8837vlh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sjt8q9c2nrh0m7p2fe8r3gnldg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ngfe8b7srrdj16sr12e4ep8gsa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>69ecq8agit14emp15dl3dclm6d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v265c0d5qc37g1r6iqeprbp4bd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>if2v5rt9o1m94v3ubqlqem3tp6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>&quot;application/zip&quot;</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hs5uj3hmv5oldhd215cfljpqna</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5cvejkgt0j4umar0r147mbfjlo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGOUT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>av5vc8oe3he2kj3fqlpaqk458g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ljcj7hdbq0fih0gk74uh6kcf14</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>isl89nln54a385sq6350k8nsqk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9civfvb7t2v06idtitvsdnh72o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p55s2umfj6561p69v5mvpm7vbv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fj06bqpq1k87tjandtt1feb6p2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j9frhciohbsegfrhq6eke8v7cg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>glnd7bs035cg087308l45j5gm4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>20qfhdec1ngp4fk4uc0a0s71q9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7jkdj4jgblq8l0jn8qovgngtk1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ho1ou2um9bot33bbd5es8h14dq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>2dd70up2m184k3mhh33hfm23me</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>catfvrp295m905p0jiavl6f3qr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bqb6vitk8mup7heh80op84kts8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7scdi6t9l7ds9u6jpmksisqsv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>jmb9ecmnm3e9cavq3pqag25a5l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h4mfitn9o805r41vm8vu1pd3ri</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3anfpu05baqltccveu6u39lfu1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b3oj0i5k7itri9rgejo1bpu48e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b1qbl7faq4nusgag4t4cjdu0t0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>guvjbdg3056n5pp67cqmgl0eff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>kl4tmmnshqr6te76r1r6pt7brn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RESET_PASSWORD&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n51s1llpl2dlndf6tlap0htrc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_CAPTCHA&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n05fmaom39bvg1em8nrukl5ub9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lqj3t2h5umsbag60i2vmplv9rc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9p0tobbcqr7ajhs2umekhcet2e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>8eddbaipd4pomlo1mtpjag46cq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nqgbmpv8ep2j0a2gh5ativmecu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pggjn9e6usio0cl3rcq80ngq59</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>24pkd0eplo9qvc7vc3d2hdt0se</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nk9852ql22qtvok6cdrpq7kmog</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lkpqmq6sh7nkl43j959e1t0ukd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2q4gcgavkdo46v3kac3c016uvd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fqjoolbord0d69dgorggpls1g3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAN_SHARE_DIR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1fuppd5i9n9k533q0l9svr7715</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>50kbvpc9kiohj4jt2d4febkhqf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>54ks1hjijfg5lohd3a0e39hrvo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7hpv7uep4lqhqjkd253ldds9lu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>31lluqkpdovcv678blro93c8hk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vhlrf5v8iuravausp7ruuubhlo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>akp96bhtoonlflk6qnum9kaj1q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>up86qvpd7skuvd87a2m0rh6sq7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fegf6a8hcitf6cgqkrrs3im5mv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k32hrev2f7n9p7blm27ak4m3gf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o46n1i0jufl2h3j7u9cjkbq2l8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q2dummnmlbsaor47sg8d1540a8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2ejq7lc75qki2i9gqhf8pl6oc9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>so6s0n8ibjsvh3ldlkanjk1p93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fu4qsnv3vanjdqu3ucr95kpgle</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>21a63dq1v2ld7a97gv5ggl4dbf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SAVE_NOTE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dreu6g2lu4o316lgvnqmmp8280</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fnm5rcqeil87bvoaplldcain89</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>710autkmhqgru0ipo1amo8624a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tbp0ahjc3u91icguvt5t9576v5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.RESPONSE_CODE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kjrflse4ipjm0bp5903t9ir3ij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7u5dsucud3ovbr7e8g18e5iqru</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a38ucfik4a93kvphjqalsge47h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6p6f94dkfv555pl18mj86jh6ro</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pqsc5fmgv3utth4e6eti98f4qd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>o3dktfo32lk0bqhdmne0n2j4di</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>tms2j8gl4p7moq3jbrcq6v4rdd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAN_SHARE_DIR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5srr61bsd1vmb4uc3b9fbqfla3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fe3clgtje0q4v2m613cppkg6tr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uoaro16e6emmmhcrhca68l43f1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>c1cujp4knipe0u588h93cg01v3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>40n78q55tj22bp7l9a04qkrudd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bnnkt28k34ob4269tu64bojmtc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>&quot;com.android.vending.billing.MarketBillingService.BIND&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>hl3e03qptll8v0c21k8tk4cvv4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7gictmgs7v1r18hfju71b7f0m9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dlgrslvg3d42ka254m1gf04h09</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dn0bl9kufbmroolcqjoo6g1mi7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>v8nefir7npealff0vglu8o3mk2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n0fvei7ercvl5b6ccmni4ek282</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qpvqm6bi76sf01sd1i3endf8mo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a9v0qp7o2c8i9q6elbbfm05ke3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pfmlgs2hiis59ah9r0qa0vg4pu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nvfo7pula3qh9qs757pt2b7a2t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ibe7sutb11gpot4mvjs5orveo8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>7dbpn76i0025jaq7mu8pas3j8q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tj02abh7lg0i105po9k07ngla9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qup1n49c2bne1u6qf3q63v9v7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_CACHE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6a1fe265fbjn9kop89p67tlok0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>&quot;android.intent.action.VIEW&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fl7fs3jb9hgbncmnd2o3afv0af</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mli83mgesa9v0n80b4pm23aqa6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>atilicbmn2807u6lf0j272ctsn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c11vhso74ov5cq1gkg7r3h9gsd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>54qmnnjphjen1og5qi701v5qv4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGOUT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nbbou4qkt0dsp73leban3rvv2b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j059htmmf6hls9pf9bufjti4pn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nsj0lfb6r4d3q8mu6815ndju1o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h71o2e4v5m73akaas10kta6bh4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ta4l42f8t6j8svb52lpltc2rdk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a3nemghvhlmigsuca6difpjsfr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>17vetlncmfvleisrl51u3e1mur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.TAG_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5ihfin7gaen7ht6g514b44sf3m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nqcfom9gt7j41dpojau23ces03</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pjvth11euqcb5bo1a5ak5h60cj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>68n2ai4r1hsf94uqus8nf8utn3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>uq8hvm74b1utmie54upct936u1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6e82frteqsbaq66vtlura6bnj6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c3plu28445npevofm8kli5grnt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lab74h221niqe2onrrceb5q271</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i42t103o0ivmoujrout0od2ina</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4uapb3hi973pouor19ikndj0lf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6dur88aomc6o1622cgelq8uat0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5vo7co4aatomdredl3ju5rdbn1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>69o93b9p3pnu0sdhc03mboh676</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8i5bkhqi5vnuklmgegsi078mdm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hmtm7clemjc4k8ovcr9c9bvefk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.evernote.billing.GET_PURCHASE_INFORMATION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mfdhqqorm34bj0hq1hlcv0gqq7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>11s5dcbfh8ljcf60dqm70e2sv0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>e7sa54ash37kc6hnvsi344o2d1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8lhumpl2h7gpf292rmlps8qt4g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j888j1lh865ensqc3s0gkqhtd3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n6l8q6vm2re2uqiao6pibghnbp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.METADATA_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bqco27bqk6d282bvldtg49uvu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v5r8qvn7omkful32au5db4m7qi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ud0mukm81ubdt8c2puti2oebhk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_READ_ONLY&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rhc1ruoppu4r3q3skk6tb71lc0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_CORRUPTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>svc82b6kg6gkfco6h98fpc1nuf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vf4jbulvkkr10274ikkd0d6g2o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j08lpev9am3hqbv43l7fcaofcp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n7ntk9rvng56p6l1ad5v9m5q9f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6fbqcjqr875af5bb2gb3r9p5ts</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>t5g4bbdrd0b3uqmnluc1fd2bfk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6rs4d1nv81b3m19pu05eomnu0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3qmjfig5q5557e0g1s13i2uojk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>miaok8dtq4ut1k4ctlt593gdjb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5u1404ebr8fq1sa1mfo4gstb4t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hukg2a3d1c6cbnd7aln6vvnjoj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sku93jtq6m4pijmscsvoqpfn15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m35toar40qnd6ddjp4g49qfj55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN_PREP_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o0jo8eqq609r0jh7adjs9ndgoi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ri9i8p7j9a8ljhrb38bg7qb80e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>um27fvk3h8nr2m0qms9o34e8n0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dpvrcf668ssnmbeg4a4ldkep6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d72hstkk2uo6voem1k8himt6s9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jmkfnogbkqdmbd5due6nb7heq9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>canal2hqvo55hi15vde5edcmou</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vvniojttapnhsib20shcla8cop</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g3nd74j4etjksblh009kmi7prn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l1dsjqpsebn9tsj1o8m9a8mju0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>goi2hqgtk7dau8dsk7u5jr2in7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>kckd2s1sfn7jjhagc6p1fj0ejd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qlt2rh6mr8q96q3ndgk3oos102</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4kr1gteodujcirhaa0tdjrcpjj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l7jjgntthp2kq4pd822k1im344</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o6nk2e7tbnu7rs57tcq3c8mono</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>m5qsplq8vv1072sgoums8g6p40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c7o6tsu3ud5dn5120c1511dg0m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>9ehnn6tp32om9q168rel8l3e0f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_CACHE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s7q3ehm0rti5mej27pn27pc21b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mfsvnoabn94484rg2ra6iul3ci</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CHECK_USERNAME&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4ekbnj37t3lcbgk7rj6gvtl6od</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>o7ck4scuv6o45p0hdjqe5iuapu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9n36oqvfan4egaapma2debd7q3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>fja1ik0biu33n41ihjvvq4eo85</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mk3qoot38g8pc1l8of3ol46ae2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>38a8gco4ajcmn3evv6dr2mtjvg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>6r2akhihi4oivu03hmq6pgedu8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jmuoioa13rbm336ed93hl3drpp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>71jicms80d2j60u5ckeurgno7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9os422terrar013lvdrt2df025</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rs0p394f9ti6a8nbtavg0p9p2s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i39orms0n3j6fi2accj65u8nm2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ak3m1v8b5lk9k96v6gh6i85aq0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vvu36mir6qgn69n527vtvp8qeh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vegj03hodhht9kjfuielg1fclq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o4q5a44is0ib6nhgd12hnnl8sk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iv52efkpmiqddja57g0aituk7q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nug4d0kl3op88qg01fn3ui5gg1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qh7oh9i9gajar12bt0j72on0j6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>mjp3fcbkl29vnhvpcvlb4jmogg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ov2pibklla621fru0gb5acdfu4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q7b1qetsdg6tm3cnm2n82vgeh5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>39brv2jp2bn7113enh1bq23vmf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q925j3tleinvjm4jh68k0hs00q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g0ga8pji2vplqr8osfoedj38cs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a8vgp21qvh9mqvniu0brrc8mgh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2amfrj6hradkl4q3h11upt5umg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>g9b06f5g7jlv7vj8pmcgf9sleh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8gdtcaj50obdeubshf1hu5m0ik</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ek47huntb26o84nufudj5eeon</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.METADATA_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jkbvgfumf7sdgh826vpj2nfit1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2kblio1p8qbbd3boh2l52e5032</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fgk1vhgdvbaok15nqpmh50omqt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kjfh82uv4ti07qhte2qpfrr7q9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAN_SHARE_DIR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q1umeshcufl9rmbo10e7njs7pa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jhn4pb97ql25ihqpeto1k2d534</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ejr4c4jqv9fj9cis55dendmq21</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>iiu06b6titktc7jqctenri25pk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.RESPONSE_CODE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>luvpomc6mj6ihleg8j9rjdjpg7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>9gopnvf1lbrom9b4d17t4fq959</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lee08j7ahiht1s52pesttbn9cf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u6h73jq1mclq5il1u3s31ca9d7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2vt9ktil6g30llbn9d561ei8av</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>19amhlnas91qppeiibj480ut0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>js6bmnsgopao99920rkkr6fhcp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bkrvmog9naarvcc012gt3o7s09</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mpna82hibfe40n0dqut6dmpjoe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>fi7lhso0s0i25ffp2lbpkkr13a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2sekdo6ubqp4cjco4cqc46egne</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cr8j615d28khpdedf44d4p99ig</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nk7ij57plgi7d52ckunksfgigo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ma98u340n2dmoeejgbc8t6bvq6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4dqhm9vdd9psht0m0rk5qkaj5m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vooc6nt0475guiu3aujgi9u7pt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qcr0h9dnlum2kr1olgp7u84j9b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>25h2f5kaja83s8oej09qgkimdt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>781s15b7uj0hd7u2pek7qv9mh4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6bu8542seso27cikv0cdo19g7j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>lsnnbu7dnk6t5l1sgu37dhj48e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>iro849fcrqr82a1i528viv2j0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>g1aohv8kdhi3t74vimf36me3up</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>abr17igmjlbecqovs4qtjc9h1u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pcld0t140henj1iftjij7cjqun</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bmb6hmg0kto0o9lu6oje5cicbq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ka9c0t460nppg6tv66u17pkvvo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>thvjmkvu7br93tupeqddtontl7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vqpgq4srq1eihf6lt6tio4qpdg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f94kd728mvvmluat2deb7jm4ap</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uboed36hb5hurg9ktu3f5fbpnj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>12iahlch0hta3ug4sf0jov17aq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s71pq15u45eidkhgvgulo00gg3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dv1rvhht3an1mnleg0abd00d5d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>udqg201sing8n5280klm28dq5s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lrurb76lprmvrfn8p3q2ohds5e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mtg3rimfrn2qcjovfeua6cvlc5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q64stdqeqg7td2vasjn2mtqje</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gd7gqo71melhc3tu62vvul7ndv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.METADATA_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bat59aum9c7s35rmbk9vtmk1dv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>pejcav7e8q1ecsp7bv9fasnk9k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_HTML&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gdajnfoni9gdmikdct07t3m71s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g691pv8coflqtgcfpge33li5ur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nsecp3qn65alh7o6190odpeilo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fsflcedu6bhqhf93vddrp51msq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a9ec5f826f4qmlnobctc7kttn4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9o45bd429svvtqpcr0oko8aj5n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gi78i3c34c6eedi280j5c3akup</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>uahpovd7ep44peuhlbk3kq3f2f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>&quot;android.intent.action.VIEW&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r5inmk3kfa244mvehqpjcic4bm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gh88kt5s0elgtp0o50p4n3vp7v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>g3nh60h5ae7pivfigp55thttra</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>nuenujdkrmecf6nselt9q2mav2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lj2s52kle7ts7tiss1b8bie4u2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5r6b0qav3e5rm1i02r46tj3rur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hdlh2vqc6dvas1kf0tfqn2m5fq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s6k6foor48eq3tnrvk7s7q0sva</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ndvdliuvh2se6jrbvqsm68ap7c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ds0asnor2mvjuggvedd8n85i7d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.SDCARD_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sa1j5ga7uvuj10f7griea8c6g2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a51hnaaj27a4lbl9apuom5o2t8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s4n7juuk3297krkpe2aeqber1e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>69gvnedrjovdtoo6a1q77titml</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.evernote.billing.GET_PURCHASE_INFORMATION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oo5ove2ucra3f9o77t26uj2ulj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o31t55l90nd2c592crongge24m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gtol8u2hkehlr9oa76u6mbefaa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3mhbelf9e7ipfnd8k5n9g8v3c1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1gnfss8jd9osm9j3m68iptb8h5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;ACTION_LINK_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8sj82neas74qi40fdev00ppcuu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_CACHE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>suual0ur53nn8r60n42i8jgocm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>caa9ajig06hne1lvu72u8somil</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ajj3k0le3qe5eflouumn513vs7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rki0hni9p9lcse6gong4g8lv4j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>skiug5gt9s5scdpp1jfq1un9te</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>8q7d2ip85upq3po3rs3u7rnrvd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r3d3ko7k28561st1175v13hmjp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kp9qas1sv0prm6vhba03hmdrol</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1egnuuar1iq66lebn7olfc66ku</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ob1b0ptn2icl08peee49i1b7k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>89vr3vlgvhrilsoufo9lesnrh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>okj701m05rntr8qo0msh526qkj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1aieq0a24oukodtnovsve62com</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>dj0dnbo0rfls6r66j38r6uvagv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k2qcaunf67grtc9deefdjubrqc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v1e7lbncbovnd38nobl00akb0a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c67h7fia7ci3775nv4htbehct9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_TODO&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9kmp133e6l22gk5u6q0gpl6ebq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>7q3rj6gmmd1139gte7vk1lrk9q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ceo62548jl4jt5mlq2hms54tpm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>peeg9hjb59o84ckqddas7el696</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>&quot;com.evernote.ACTION_STOP_AUDIO_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>t5egr92vv7odvfs1a58i7qd4bb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ga2drs34j6hnvis44grh62c877</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e4vabulcpl24gqvuefchshg673</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3nu6l4msgematfa92m120h43o7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1hoq1q99eollem129cv6mpdelv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>73g6tddj1sb0icji09j6jahht9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bgtigp2v0t4b6fqu8nhra826gl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7tpa26iltrfhlipj10dg80nrov</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3nl6hrf545eseko698424s4kgv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h8ept5la9sjecgo3lgath5u78</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ttqpukud32umsece0icv894e9n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n94ttia8iagnitgl31idmeble8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q31kljinoj8dgmsqf917u4ous0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a9rpgarb7olg0venrmpoln4ju0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ccc4deu5jmdck1eop8qp740ttg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1o9fhe0pdtnctme8914bdhtphc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u42fgfjmkos6egr7tq9kbo81s0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l15loggomv96atj15v2hnm3eoa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c36130lnnaa3tdemsdplv7fkmb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o005apb03cnmi209se2frj3pmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5pptua23gmgc8r43vhgundim9b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c5jrhqnkcu96g6l57vffbtsm3k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bai3t6etbcr2vuib4d5anj419o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>99nf6itdh5fue994h6m643lnar</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k52h5q07s8aab5d39f5o1o568u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RESET_PASSWORD&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ov1duo2tcs0fpka1u2uadl3alp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pbf473p5dmvc0gl0g1h8t7bnam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1e5vd3cienebadbfsavdpb90s2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6mmko1hk025i9cot00mctdlevb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r50704r90o7e4lk4uf7jnn5qaa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hhkv7hsd62afd5guvemldafsdr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dvqlosoc32gp5c2pqnla391odi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>thh7fhvo39bk2ke1kdhhr1173p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k652bkco5a5mf00vabo3lmtvpp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>oga4m782fbcfml2tndgkk42ijk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4v3bteg8t3f4t9k49veppm72dm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_CORRUPTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>eq5r1uelp2qumvjfgpjlqo6trd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hsg6e8qpeiblmcr68l5u0lfb98</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1aaotcgk6s5t2f6n95lsghsfqg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5j7rn4le0hnkbpoonjhbgfke0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.TAG_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h39fad3pcpvo2dlpr16tqcsdn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ifdc212pckt7krvae82bl3lb2i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>u9pgl6red2fthtgind1ojt00mp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>38l7o531t7jont963hfqb67apj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qjp1d1d2d7k3do6l29sadb0181</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8jcabnik2n25260e286lkooqid</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o4375g067nkasd8005gqfqg9a3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_CAPTCHA&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>e7121nflaht571srs6ickttadu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kodhahgun1tvcp007jnqqnd70i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ce5di13ml1tiajg2ekb2el8mt9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lhu7u1eua2kfc2kqutf5ffjac5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ufmvlj05pc73rml8c0h0b4kqfm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g4o6vjt16b1aiuiad4ss9ke6ou</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2nbkd49vo234dci3upkgoshjpn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>de6vo64dj6e6lpch3fq3jgt7gf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4hgenrebeq4en1meuvjpncu8i4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>85e5mgt3kkc6m7ggi9fpqe82uq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6ebt5lkoh8jcf9bc7dkah8r80m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gt9kra09bt2nhp39b5r01ilbop</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9jtmp41ldoobgq9jqpvo884m75</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qlb5dhk6cb59r5o1auc3au07om</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGOUT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gjkjjhfmbt3sqse8ubujsv8g2b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kh0bu0ps3rasg80td0ro75b0u0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>41ogqqr3gturjr281948u04bms</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nhtrneeank5babiv6fioanedrg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ms45goec6r01gk2jddkvtdjarl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tj9hjgki51lg9r9obklr29gsmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ih3v1c4eibmqmmqvae3nme7625</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_READ_ONLY&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r1behcvap5jba8gkpbgft3p1da</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ld222lmolh36rvkdasjcv97ss1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f8qtf85ic5muq7f1f3elm0bl5f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8d3agpbeqq693teq9vq2m9he2h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8i0uls966vkem6fbtm6jg0mbtn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l9dvfu7g0hu6nl7c6toe2vkjbd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o81btbj6q1kgtg0f4799p6rp80</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rupnm49cp156uiv4vhjt6t5qif</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rgv0b08lhrtlpbe3te75otr1ra</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ojjpg6kji319rtpi05n08bas3d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>69jah9bs4t0ghon6uugubnrq9l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>23ogqa1je1fau1mdm9jniaeu5s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.TAG_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gnk5nv3kh1s36hmuakr85gggei</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vvffl5400kvnbu8g7m0hijcvbr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q332iuo1488nm93rdan9ms5s6t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.PURCHASE_STATE_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8kspt4ijgmec1uf6porgp2553u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>r88kenvlqkckav7lunhgd3nu0p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cumd3nqcbrrf9f7baou5pgouvn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>scvhcoihv2qnu6os9ibt4f6el3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pk0h6u4lerqgm8f246vl5t3tl8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tfg6t8i70q3hc50ivgr14o0onk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sk9epjlrbqk2jdcvu8cplf4j3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ium9a0a8l2r60vv67mod68ph9m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lv3brmma3a8n5082bdjhrb9mcj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dc25290qa1bbahhb44f5ts3ait</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jte9dpllvgqo4pbhrkdjup6hac</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8qe17jbn3otkihi72hbvqkcap0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_RECENT_NOTES_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c3ikph6edpgtsugcg6e1d05un7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p89lio5c8nd4c62dl2v955336a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>re60re834ejt4pp04cmn48ap61</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sq604k5v50rckg9bgiu8c52tci</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gatjhb0psv7vm0j6vbd12tk6pl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3d0p1r041tjb5ov1i4e0imgcqf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>decas9rma9ccq2c6pd2n0tcns3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>306fir9u0djjnr88iiohgqfkgl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1ji0uotnachjv7prdpt4kpokhd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>do7cdqb1o0q0puoqc0p5je7eno</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>28uqneimtf9s402gd66cvltdid</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qc6p2pnfq42amlurjld4b5eks8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jdkqkphqobfgg7eftaakcisnj9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ef38ccgvq9d4j168babpkbcbbk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fs4mbjotq7jgkdmg0qbhmequ75</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sgeb9cs81vsglt0a6k5669c786</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7f839ir0uv86ce8bioinj5jpc9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l29j48nr57lkmrrc42ll4gogf6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fnfikudsdfhr3sr2jag2ln5s86</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.UPDATE_NOTE_TAGS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2cvg1fr0klus9hmam1gr8q76sq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pae3ai23t3bnlk6j6qjfru0cp4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a7j3gjjeq5gpemm6fv3pbv1iof</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;ACTION_LINK_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6osdfbhjdlaah7a40fn00hnnj7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.MOVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7a20t9486mra92f2uknqnlm5f6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>daul6nf0379a409i7l2rjdijsm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ducaj69as2q93t0dba3621b7u0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>97k7fqe08hqt9lpcf8jfic527s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6mkbc2eqi5rp0gda9ib78j9qhg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>simoq93p1di50httqbcgcb13pj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>cskouq4pormcgl6j00p2h79vih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>87es1s38kjbb3psml7g1km5th1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>4ns4tq8scc75trsfu5j5t3rlm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kkb8iesd4drjisbogai7ntgs2k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dh95d3heu7bnbtm93u5ve06m98</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>srporh1fehjd7qnrbkjsdkcogi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g385dacnffevd61eg3f0ncqe0e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>&quot;com.evernote.ACTION_STOP_AUDIO_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>52j691bn7j0i2a1pjm1uopkims</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p6hccv05d13j44cq4c07t4ck9h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>&quot;application/zip&quot;</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rhe54o6gtuesb98r7kr8aco7od</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>18ereh75s623aebcqq5v0buju2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u8nofhnrru9aca8vj0ulj0r9t9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4s5g0s43ak0sivlavg39763ojj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g5ag3fvs1gupht0q3i29b3gcd0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1j17ume502utmtqouhqkp1ql77</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_CORRUPTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>h2a8duo2vlmjjf0opovl9ki3u8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g4eeg5j32sl5mh795c7jgch77v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>klmsnougoi8o7ntcat2635es50</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rthqg2uefj9k8rvsgcuoimojp0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nga2e3s4riohsaocmjlb4cggf7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>fvi6jlel0t10kdmmc1d27869oo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qjvs641comaj1la2qm4kq6n9a0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>1p7mq9u4bp4oqjqmgmd76h7vp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nv151vjgtqrftkvc9c19odudal</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>su2psf9663jusjof54ib8sbqr5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_HTML&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4l41c7vjnkgt0trrun284hrom4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9dj2fggrboe7704rle2n51suil</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_READ_ONLY&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rb7pchslfihc5va1er90jhi54v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sv90j5lo7pj4p4farbfumkm8ne</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>km4trjrdmoo80kccguifb9n4fp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hq5f7162jrjms6bvrqo8jnjvi3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a4ddesa5pir7krbi5kvnh8urk1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>11q7j7n9hq9dded56j3jejkgg7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>bellph28oqt6lvkbf145mml5h0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>skhhahut3b8qf7p5nk3398vjvu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rrqov04nhkvhocn7m0a3kstcsk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ehe62sfgrsltetv0qqhhrn4l4t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>238d6qqndqcrggspmaoe6o2u3v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vlvri8vvjqhf45ave0tqdpnsm2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>igler2el5hji7pubdg373bsh0f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>t4dlfg9uvo15mu3pm124atbkij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>6jejkrltpascnt6o1snkao0t33</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hpq1ufkd1i05h6b4rr76c09q63</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ppfvrbg90m52anesl3brg93rjj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vsrmognb4j4jmuqset2kl0vnsa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u14g3shd32g58l876q50bc89tr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CHECK_USERNAME&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>46hi8g3mj71pu8edjvub38ksos</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a55v4mr8lb5eau7n4pl620evec</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p2ld4ktor8i7g3c3nkj978ag9v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sm8t7leo38gbfprtisastdjili</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5ompdh8ubom2m0o71av6gcso3h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>18gmmj997ocd0vdivbgppvg9gi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o6b0ktob1puiabaqmjlam6qo3e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nunijdsogtktvng8bhj3529r94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.evernote.billing.GET_PURCHASE_INFORMATION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1bcremr33d1ceh47jmum7coput</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v1823mch9ugami2scacaiccnm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.UPDATE_NOTE_TAGS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qbk7jtubo779vs2d6pc32id9ag</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nbtmed5ejrc78faeqb3du7df42</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>id6hsabc1vakdhnaf13lrmjllj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>itt8e4akg5t4jgvntj30b3vlh6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_CAPTCHA&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b041vjbth58c15h86pr05un39a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>4rslfaa6j7g5p6qvbfhtuct3dp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7lfd3h32ljp0469ok0c5ifbm7d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hvbkln5h0kipt9bn2j0ki2jqv7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c8nb5lnu7k8dfgo8kdgouikdtt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l6df8rufefiplbspan9eeotmbt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uk3epa2i1nofmhs7s82kdg5mt9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d2i4g9vuqmca76h2fi3s2en4k4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b40vbg1kvnh91vndbi0vmu9p0c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4hv8of7k30hkdpg9f2nec4815i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ss8qe1sf3eoe9p37j04p9nl8pk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>io9gfmesmvulb1agoklh8buceu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k4c8qrs3fngjvn3r0fne9u951s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ai3n8jc15ojhu6v1ci5pupm4ct</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>mkrlh3p51i4h8551258nck3cpd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l74t4ldtso8sc9memfmqd3r460</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hmece4b4k4saqgrrjkkttvm8n1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>lqvb2h5veumr6dj5agjhbs2kvm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rqbvgf7k52icgbtkgm4701cr50</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>hq7nv48v3rc02817frmu1308e9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2rdcjh572mbud2mlp24vttjbc6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8574v925cr5eab74ngv9cup9ac</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>audfrhslsmglt3toa2kn9ntjda</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>noi6qjd58fgcemej7m7hgc8i7j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mul0dukek45o4ibs3kb3uuq14n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rg0ftqvem9uqd12tugak4e4573</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pub56ovbpc8r6eqbfee4qgkmfd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>trprbagj30u3sdtrhd5gk62u8t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kmokkqh6e9oclpojb487j8kgq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jta0qar8nhijhnuboetiebsfqm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>83bodd9one7lvjhqqrmgevgg7a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1kr2f4iud0sfbrgemd6guam7e0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1vm45bfqk7rlavq0p998hsc8s5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ec84422j6scirdqipv27385lhh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>14drr572vvadtu6lv1svfp3edv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5rv2l5n8ie3ug1m57bnp5hsvji</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q1ul98ldu94s7kqhc05iihi2f9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>60se0j44h6rq1eqgm8b0uk1r6t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6pepvqvhhco1dbhs7rjjj34o7k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lebt3l7tfers8qen2ou35n2qf6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_HTML&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1krear3hhqvg14ua5c5k797io7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tq29or331m4urt723ef6vri5de</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>u7ioutd8vg5mhv0hnsc2eb5dlm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c471u4epole326j326rmhn2s61</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r6gsr0rv5h8m8b3pujt4noercl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>fp9tn4f41iqql54etbdmojhgih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5obvshf0446shccp951b12cgko</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN_PREP&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d9m56kqtv0a1i6skj78nsb1i77</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>763vmnntnvoine1e43brfd9mrh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2e9sntsmddj8dtn69fpuctlu1e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ammf48kepui8vblegfrfscffv8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lpkbdtiv36d861di7tio8qj0kf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k77bnfpv4rphn0rne1uhgmb85c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>li6g5rgs2vgak930nukh1n37nj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l7082bi6ful0qto7c11uglo9v3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a2qf5t7rtvbl50ci806gm78gqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>&quot;application/zip&quot;</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d50hb11s6mpnuvh5jhtv19fhpe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u6m1bjqo4o7b0jv3tf26rrlfoq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r4ralm2o8fttt67d1op155akgp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>snjhdmr3cnjo39od7q2a9k32j8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>&quot;application/zip&quot;</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>12a9e5jbuv5q84vtcueiksnnqn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nnps6rjislmfrvh46fu7aj648h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>du4418tsq9ca412sj7dus6dg4r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vdqctqs9lrk1eipfu9rsoqp1o0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>af0o2lnrkcblrjvcivbfojhtfu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>itrqn0hi0gbe8vtmp39291eora</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>clcvk663jaaocmkbs4v4rcf85t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN_PREP_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b8p5mta9g1u9h4g9bot3ch0ki6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m835r6kcu9fgve2al52f40fu9s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fc87esa81ihfonsl1on2uq9n36</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SAVE_NOTE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>24okrpj3t9gglhclavdpjlns26</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k6kv09f4hihmvcmun6ou3dh7pl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r29m3f1tmfud9hdfpv0a9vnu62</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>26ukqqbl4vndgh0jstke10nbr3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CONTENT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kjmdi75b9nqlltun67c6hc631b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g1vasep63dojk2t2237tbrcouq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vns2vq3r16hvog2bae526mq6nu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>revuibnpfk9e8kvselgm4uqcnh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4f1o6j092qjhdk62shnuju3qoa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>66d6nv6a7gvv96ssusbl09gl0q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>te67hlk1sr1s15u28h3hm35v1n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g20d0f7ns621osmc6saolobpn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hgcqck74tb6op0k18e6ni3unbi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sd709o1rf8qgc6kk3f4mr17r27</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>r6cju8hl1qn46egclul10ph1p4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGOUT_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hrgd8ic8eiqjgfkqlub3qo68qa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jkob6l31tp5n8mpa0gjvcj2g3n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>oru1rc3s5bn70f0idt3fu8rrll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q5md2l3rl94askae6m7alddur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lcdsurnoi209hlelsp6g7rb3g1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jjatm36rtoaguavvfc31qbhba7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ovcau55pac9v6prf3jv98and05</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>odbqdlv57accsls5s7tm6l9qrh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qpudsuphjk3nhcupas7r3iqu79</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>666ru7oaq4hbi008hop6c7dm3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>em87cq7b409c2bnnr62cjmihi0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1ube2bgnnbf7llkqkludpvphk4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6e9qh02vspi9ga0l3uvpdsi38m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>lv02svaml5jj2uq6uvlnch475d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.RESPONSE_CODE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gmr48f4126frt8vtb5i4u3gkf4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fut0369s6nogtc29d3t0bo55i2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>4nkn2curmbrfoo5hupdhtfqkv5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k0n7u1v5g59b341kk7npluinu6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>va598huqvi5d1d5ohspja9o9dt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pcg0jc4n2askmh29ql9hh25qrp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4if8fj15ku2skfbq6qn64l8bkf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.MOVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o7c4bg1jkpihnak35aq7046qus</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2t5696ufh16tcombgl1kagllnj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.TAG_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qpela0aom55qogc3s6gotakrea</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2v8pdvneio4bjj8iddo49bfjeq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN_PREP&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5r7j6t2979esrr6p8jfr8tp892</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8m0b5ougf72i6gvueem2vuee3v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cri2jna3gqiadsljcm2gqlgutn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gkjljp2s4i4r576gsv8bmfmcq0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>78uoi6a57b18ul7qivg02p1vd5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>plme2g51starc50nh6gnnjdpfs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ckjnlio14e943lo615dtl82nea</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>&quot;com.android.vending.billing.MarketBillingService.BIND&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>mjt2t21625tr41i43aaf5g0v8k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cv46liv1bm5je13ov6rk6ng6qi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.STOP_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>116bdsfmr3a3s2dn2dvr49up2a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>as6pllmjv3k0grs633eestce0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mpk1bedu535v2bd0apnkns791e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>po41vlfv21h331fsgdlmgarbjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j4setn5uth1l8mck1slrvoudfn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.STOP_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>272l06k25g7e3vbe3q35slf73g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>st2aom4lthd4o0stnlb0jrbkl7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rl260n28d5tvfnv7vvp1vgslnj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jkbg8pcmqcljejp0l8pbq11772</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rbkr5d2b7ob0ddf2pko513u5t8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fi8sffvnsd16b9nfehkoedb52t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1klf0rfsc4glkvcgivo5ghulte</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5tv3g3ddmdtt2mhog4efd245fj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN_PREP_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vafc6donemktdkh268biatjni2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>rjjuau9nkgvleaqkrhmnvu2i4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8ea8nsmh4un5gu0t61cu6d79dr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.EXPORT_RESOURCES&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l0b92gktbsfjd72rjq2804lr3o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ehhd5e4ou4o53efkomp41g980f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>268l5ban20445uhu2hogebap4b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tcdq95k80ee05f14cmbjfr9glb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.SDCARD_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fei17hlsa8rkq21enaceqvteo1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.REGISTER&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nmog0o3fa557krti02klgfd9dv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g3oeg3kgc9460v1a5rdsuk6qs8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rto6ja8ip9s8qii0grkrlj8vdk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j5cspmk2m4lm1qo9vrjt4ajjrr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.MOVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ptaf419sk1slkdo2pdbjdj6imr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8s2v24mtpn769a1kvtkt8v1uqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c5s3o6ca8obj87mg6a99tdpqif</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>30s5u72ro21bvhumbfrpgadndl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2fvirmp95e0bs48t96ebbfa7t1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3f926cbminmp9reeepnklsb0u8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>scdv2vgdp8hsf7dttj1tg6fcer</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kkf0ljn6050901bp7ubgmtlnjn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pv2at9prh9ojgetdeillje72tk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RESET_PASSWORD&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l1cptvjhjdsulcrekpdrpr116s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>uvsqdbklgntq18gv88l48rdnjo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>kamcdf3u3g08m0k7jut7ha90j6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9ubmujsvtamsnn0j0g63mgogv9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>uto7udj1unlo9n3uc6eacnkuac</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9je7gnl5s8tade9pkum66vrm6b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qrii16ebhcg907714dsa51oijf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>3s2g2kr1phv1fm0efb1f359m20</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>862q81ku7igl2p5gcdc2lddrsi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pe3tnsbit3dscn2lr8nvq6pbnq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ng76rrghi8dif3dohgvh00h2hp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8sgrqiorf12dod1dd748jnq52e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.METADATA_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>va6amjiksvnj29h1ljr5d6s0gf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_CORRUPTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e9q9olp550qd6vkapeqds3c5a3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6m1hsc6pfujdua70lajt5agb73</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gib8e7cv479pr5rreplf8t5sf3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c8nj85ghfej6phnl62tt8pfdsn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_PINLOCK_STATE_CHANGE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1j0knhn1j1rb6b7hhj7q14o324</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ch3l9m740bpq8n1na6aajgej0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h4gamkafs5q61p6f24o26m9uva</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gus7rfd17hiv8adh18drgqilo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>v1oq3g43t6phprt25c8fjl0u16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>954gorqa67lerm1vad7ikn62ub</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pp571bp5e67iq659bn6ae8odpa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kchm60hl73gmj3jokbtd4c2f59</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cbgnm5l811h4p1ps7snth17tm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q7ochno2n3q2mada7pcsm126pi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9jmmnsi4928tkddejsacv314rg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>orho9rvaa8uc3tveii5390jqdp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vmumq81r3tr2d1d55q12h1b5cd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nlgcs7qj4dq1jfon749sg94e7p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ue7nfh2n41s3p1srle7rh4f23h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f0q32t4i3utli5sbd80nai0asc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>i4thgqrfu03q3s3s44jns5kdpf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9u9ns1ljijuu7eqajm21d71hhr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a4tm2ir7uf8jp0ntbipb7fch32</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2m95rnaep21cug3t16uddf1g3m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>234acn0rh9n5ol5jnupnb3lsgn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2u6vmrllu70hknq0dt7n73q4vd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>&quot;com.evernote.ACTION_STOP_AUDIO_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k9pn5npd10klmf7r1bmfo3r2e8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f2llqg3emigoak49p02256uqah</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>oce3rga9o184im55g3svf46tle</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n1kh56uo3hl9r27qootl6lvh9i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1pn9vj7gvb1ha8s19fbdsi4kj4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_STACK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3io45254fij5qetfjiugiuaasq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESOURCE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2v6ni9aboj87m6qtb4bq5o84po</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ah2mcal3rdfc2ih9slt5vujvq6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gtcv43r8g1e0lc74ebju98hqf9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h1lm6ml1eu5eb2eg5khdfiakhg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>&quot;com.evernote.action.ACTION_RECENT_NOTES_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ple63m5ocop7cgogoip2ekgr6q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.QUOTA_STATUS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u2t32mvjqlr065e87668ktjehf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vapfqjpejp4r7m44un8hqrmk1b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s5f2ff0np886q51li0anbchsl9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s0q061n2209oa72ghjqijkkr8s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9fqmlqciuqnln0jbe69r5pasq0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qu2755l73tedjbifehpe1isgfe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5u5u5ine1ancg0qgdoc6scggro</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5c6ldhj72if2n6f1n7pc4ta8c9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>74k4dt9onk0dmkun0sugq9vv4a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l6d9pbir2th78csi6op7unaeh4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ovjo9id9stdkur336fqnhoc67l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6suffmu22v7vajhcog52rr7aul</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lksn536jpo115gfbfa0f2le4co</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>nf94odhiff10ipn209a4qgjlvm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uhtamh66gba1lahtq3l33t3t6e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mafr26n5fhkqttmajkuhtgb7nk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rj4dpn87i7mp8t9695u9fjfb3m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RESET_PASSWORD&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p43v4sgone0ls1vv7sub81nf7e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_HTML&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r39uho0q0addhvc6aekpggos7h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>hghkl5blp0toi2vmq7ecomgafo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k0hdcu79pm9htnkjt6tp26vv6g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e3na0e2p5jflehr37r6bn83af</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.REGISTER_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>50bpvkcf0pv0ovoftborf8evjb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOG_IN_PREP_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p5u59f3qj41bilc26tdqb7bh4o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>esvlbrs7gu3g792g1selmcsei9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l1p9csloqeqaa2q3ub4por7qah</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;ACTION_LINK_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9fgoob0srhf1t77atfnto4k2o6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o2h54bjcogs1s2khpfvn2phvjh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5j4ut28taj0ms1mcvupugjn9kr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lsjcc8mhl1fapasjqug43m1sjf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_TODO&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>43iluhfgh1ockpaor466kc1orh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>djrvkcsdjt069nbmc30h543i32</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>&quot;android.intent.action.VIEW&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f7qih6jhi6ricains19sl9lis5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p4mi74m2of7gpe3dpuroc39qa8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>np1ksqfli682gi3fdtfqfus63t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e0e0rjr6incb4g5teg4ktm58po</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>892geh734pg2vdniqh1rp3q842</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>25jlp84flgfammvppffglsdg6n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7o93t42bmra7vvubngd7k0c8no</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>96fgfj6behva0rn6kchlk0031s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fk7hd0k0c5567ogfelfvo7s8ur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9rfue72p33hnb4hd5lf4j8iher</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SAVE_NOTE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bj4vdbvq6fcbiaossusj6ah7f0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ga4ruhnvbmqud5d8lpciag0bbg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9pca9snlqe89t86jgfej0q0ebk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ibcg5dh1phej14hv9ei1fuj0k0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>imhpsv687628u95gmsdoh8tu4j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fq947svn3dpgn28fppfan1a9au</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kgdi13n6iupqvtat0gg8r4j1sg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c86oki9vs6lu3ughp15v0nit62</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o2m21s72bmrmnnnj33oeb193ll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN_PREP&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k8hph024lt4gej4cvsgj4t1hb2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>5p380ofdsijmj6n4r2tng3sl55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fj63ga0f888opainuqtlrk02li</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bhardthb23cq4or7lq79is1cjt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>&quot;com.evernote.ACTION_STOP_AUDIO_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6q3l9vr53u44ta2au75t0bti8b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hnmr1jcm4k68bhct6l4t9ja3vj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6d1nitk1c5cdjsbnqtkilvvkd9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rtkvbgd36kdcehevgktd7j4f87</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qj3t8ouskhk1r1n5sem8rkr54o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAR_CACHE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>iagfufh8amnkqn5aquooucmiai</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p9vf02p6foe4bpnk2tli398f4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i9v156o9u5hrhi6v9gc1jgevur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a2tusraedk7u7fee1ssjp7l9p1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s8n54sdal733978apqat9q1ebc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>56h42jp945ks77h7thnpeht4n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;com.evernote.action.DUMMY_ACTION&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>11sc1r5uqgnef7o7uflm1ic36</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>he14k8b1psa03i79ukgaj7oa2r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6q4lpa2rm03r3hpsiibaklhmma</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m1et5j7uko295qri1f3q4qebtk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>eu4r2a5re0qgdv3g7i6vghap0g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.UPDATE_NOTE_TAGS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>75b2dc9eer8p4ua6bp9q60hio2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ivhk58j2r0tkc0l5lingi2gsau</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>orlkoad29ddo597gih6vis2d3o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rmpubqqsvg0rk2e9f91e74vit1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d461f9m5tn7duscjp7gmb934dg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8rb9iuhtamri0li0gcevp6cnam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3cpvv0u6bo10a4ou3rsciovqp2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8e1o7t7ld1ikrqjg23k05jvvjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>558o2i1g6gnnasudht8lj3er03</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t2gd32b7ms3o1ugce2be072hf5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_IN_PREP&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kbb9c05b2tvlreo69c16u4i1ae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lvfvjupbd0f7nscc8jb7nk0mu1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>370p0i54pc8s58ga7798gdvg7s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tdcf30fp52u2p7b86duu19nil8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>utfvrjpk3sa2eqm06ei6cv0r95</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>gilhtcjm2ci680tsr5stetjlj9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>re4vh44bqjai5utgmhv4smvqq9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ehqn9q1hh4k2tpnd249e51odha</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>g9t6k53n45jeadoo036mum0saj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>483b28qst4pqg1v822mc58m6t0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>phd90ebpiivhdl398nk5aq4m8m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>&quot;com.evernote.SD_CARD_STILL_MOUNTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1b098jt31hjhe9odl9heto3vak</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>oqfii963spipumcmgaojpd7nde</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5ich0dbqmbc2l3tt095k496bds</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_TODO&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k2v8mb4auc43p60knvv6u2pir0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.LOG_OUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qrdjq3m8hjcpoabghcj7oe013v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1vnm1egkib61oin9fl7t34angs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qkblrqrdfjknv04p9ibvn8e0lh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHECK_USERNAME_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ub7i04l31ih3ivumo5hm1mh4fu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>&quot;ACTION_LINK_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>df6umjgjjnn21gtdfr543utj8t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kgs5k5m06cjk992eiuks6v8qji</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.STOP_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pppkfpqq5bmg64cng4mej0a658</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.PURCHASE_STATE_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q81eg9jjb4dn8r3r79gs8ig2t9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTEBOOK&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oft5fast5qelbpr6f94rpalgu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>to7lrpt8p78ss3m7urd6hjbt8v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>tdc2oh9b3ktfeknq3igmebr35m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qa8vnisjfvh9brq7alq58hf4ge</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>98v3c36k9f6njk903n4juhbmh1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7m9pfketvk1qet2rjj6ptefhdp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CHECK_USERNAME&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>594i7eq2udgj2pi58jui4pbrlo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CLEAN_SHARE_DIR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fls5gk8o0mjliigtut7binnqo0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f3cl1eumfahp3vp29i7hg3cd2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_CAPTCHA&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p5vj2ie58tomfe7ndfa0k7mtmm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>oo2o5crfvrqvjaqtgmgisu384n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>&quot;com.android.vending.billing.PURCHASE_STATE_CHANGED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j9761pb2i771rgfmahksik5evt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3dbvso67d5hkd20t1csdcmqdcj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>aif981mn7c4sb1f94quoufmhg2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>idk67vem3l5phuvavf2972661t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fh5itf0nvrejtcbtc7slhi0m8g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o36qj8vtkiv0ahfbhrt49sb0k8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kmpgmr0mquoi8b1k4nk3p3lmrb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jk5ioetjn6mgfhm900ugbnrshc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_UPLOADED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ece686gm8031m7to9ss43mde6a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nidtfd9m3hcmkvk7usbmm454g4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.SAVE_NOTE&quot;</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2gte9drmvkafsus3ec1fi8bu0u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.CHECK_USERNAME&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9o0g6o69o333hf45sfag8cfcjd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h6mj8hn5sfkok0gcfej0sq3f4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.GET_CAPTCHA_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nme48evs0d062vvhrbedlofos6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8end4rukqc39olv7gqdkphtaki</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ju4bgakraa1s6t9i65gnjtihkt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7hbc54g2f1q9kurg21k00fa8i0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.NOTE_DELETED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n6dm4buv4j3rjqsi4121rigip1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>&quot;com.android.vending.billing.MarketBillingService.BIND&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>evp1v9rrddpk42b342g17kqrfi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.GET_REGISTRATION_URLS&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>go1ku89h63vvhiu17v4s38713k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.RECOVER_NOTE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5jortp7r3fa32cs39dsiugr215</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>&quot;com.evernote.action.SYNC_ERROR&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>h4nds9sq5jdcj9rpggpid5jrda</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tjps8u3tbr4mqve89kccgmtk3a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>4jn2f9sqepqe00n1mho25g28oo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.CHUNK_STARTED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hua1fhu1rjvbaohtvv4b55ci3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pl60kh0cj1oogku3ja0tkgttam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>&quot;com.evernote.action.START_SEARCH_INDEXING&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mdne4rcd4d0v818ko5vnv39lcf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vaih8o6pv0pdbrr2ruu9qsd9mc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>&quot;com.android.vending.billing.MarketBillingService.BIND&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>q4tgo19imo1pvissna57ijsq16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.RESET_PASSWORD_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c8q4ufqmcaa5kg7kf6c5dnsuo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>960i62ub27dlalmu4obs54rp8q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>276jfvc532jqg32dh48bkg1gke</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nfbi1iu47tkpdqs7018sd34d4j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5l3bl0okc7esua3ld74cnracai</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.SAVE_NOTE_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mvb8vv0gfulrgl5iuhn8a2mmu2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vuk029n2o1ljsujo1ulmm1185q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>&quot;com.evernote.action.FULL_SYNC&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>icds3kflevg6kkl0s9s4j9p6nc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>&quot;com.evernote.action.LOGIN_RESULT&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>kchht7l5ndpohn527bfvuju731</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>mtiktnbmq6rml0h7l8ssukbjse</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i8mu0n6obq9hsaajckhlonidi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8p08kkug9c98vt5t7klmqmnn73</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>&quot;com.evernote.action.THUMBNAIL_DONE&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7u3k7e8un91472d21buacbv5tt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>&quot;com.evernote.action.DB_OPEN_CREATION_FAILED&quot;</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>emenios5ut8kkkc79sebc7hlhu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kliv7kashrhva374ub0krqdaca</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n73hm1h6df4b2q3ilfvadhbfba</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gk75dlip1cevristgvfckoncvu</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$z2</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.s: int a(com.evernote.ui.helper.bp,com.google.android.maps.MapView)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void b()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.Evernote: boolean c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.be: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.n: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void h(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: java.lang.String c(android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.o: com.evernote.e.c.i b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dl d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void a(int,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.z)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookShareSettingsActivity: java.lang.String d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void n()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.b: int d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.u: void a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.o)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void c(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.RateAppActivity: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void m()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: long f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List j()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.util.Collection,java.lang.String,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void f(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: java.util.List getResourceHightableImages()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: android.content.ContentValues a(com.evernote.client.Draft,byte[],long,long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean p(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.String d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,com.evernote.client.m,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.net.Uri,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void k()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void onActivityResult(int,int,android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dj b(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: void &lt;init&gt;(android.content.Context,android.net.Uri,int,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,java.lang.String,com.evernote.client.m)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.lang.StringBuilder e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: int a(android.app.Activity)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r27</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean r()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: com.evernote.e.c.g b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void q()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.util.Collection,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(android.content.Context,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void l()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: com.evernote.ui.helper.be a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.SearchFragment: android.database.Cursor c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void u()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,long)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>a</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailActivity: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>0</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$14: com.evernote.e.c.g doInBackground(android.net.Uri[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: void init(android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean b(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: android.graphics.Bitmap a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean aa()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: android.net.Uri d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
    </ContentProviders>
    <usesPermissions>
        <permission>INSTALL_SHORTCUT</permission>
        <permission>INTERNET</permission>
        <permission>BILLING</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>READ_LOGS</permission>
        <permission>ACCESS_WIFI_STATE</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>VIBRATE</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>READ_DATA</permission>
        <permission>READ_CONTACTS</permission>
        <permission>WAKE_LOCK</permission>
        <permission>WRITE_DATA</permission>
        <permission>WRITE_EXTERNAL_STORAGE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>READ_PHONE_STATE</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>VIBRATE</permission>
        <permission>INTERNET</permission>
        <permission>WAKE_LOCK</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>ACCESS_WIFI_STATE</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/APKs/Evernote.apk</apkFile>
    <name>Evernote</name>
</application>
